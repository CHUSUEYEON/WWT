<!DOCTYPE html>
<html lang="ko">
    <%- include('include/head', { title: 'What Was Today' })%>
    <body>
        <%- include('include/header')%>
        <div class="postEditContainer">
            <h2 class="H1WWT">What Was Today</h2>
            <form action="/writePost" method="post" name="wwtPostEdit">
                <div class="inputContainer">
                    <fieldset>
                        <legend>날씨를 골라주세요</legend>
                        <label for=""
                            ><input type="radio" name="weather" value="sunny" />맑음</label
                        >
                        <label for=""><input type="radio" name="weather" value="rainy" />비</label>
                        <label for=""><input type="radio" name="weather" value="snow" />눈</label>
                        <label for=""
                            ><input type="radio" name="weather" value="cloudy" />흐림</label
                        >
                    </fieldset>
                    <input type="text" name="title" id="postEditTitle" placeholder="제목" />
                    <div class="regionBox">
                        <textarea
                            name="postContent"
                            id=""
                            cols="30"
                            rows="500"
                            placeholder="내용을 입력해주세요"
                            style="height: 300px"
                            maxlength="500"
                        ></textarea>
                        <input type="file" name="" id="postEditFile" />
                        <input
                            type="text"
                            id="searchText"
                            placeholder="찾으시는 위치를 적어주세요"
                        />
                        <div class="searchResult"></div>
                        <button type="button" onclick="getPlaces()" value="위치검색" id="searchBTN">
                            위치 검색하기
                        </button>
                    </div>
                    <button type="button" onclick="addPost()" id="addBTN">+</button>
                </div>
                <button class="writePostBTN" type="button" onclick="appendPost()">
                    Would you like to post?
                </button>
            </form>
        </div>
        <script>
            const form = document.forms["wwtPostEdit"];
            async function getPlaces() {
                try {
                    const keywordInput = document.getElementById("searchText");
                    console.log(keywordInput);
                    const keyword = keywordInput.value;

                    const response = await axios.post("http://49.50.167.42:8000/getPlaces", {
                        keyword: keyword,
                    });
                    const places = response.data.places;

                    console.log(places);
                    displayPlaces(places);
                    keywordInput.remove();
                } catch (error) {
                    console.error("Error fetching places:", error.message);
                    alert("Failed to fetch places. Please check the console for details.");
                }
            }
            //{
            //    "postTitle" :"임시제목",
            //    "weather" : "sunny",
            //    "region" : "서울",
            //    "postCourse" : [{"courseImagePath" : "temp", "courseLon":12.12, "courseLat":13.13, "courseText":"course설명입니다"},{"courseImagePath" : "temp", "courseLon":12.12, "courseLat":13.13, "courseText":"course설명입니다"}]
            //}와 같은 형태로 받도록 되어 있습니다.
            let postCourse = [];
            let lon, lat;
            let num = 0;
            async function axiosPost(place) {
                console.log(place);
                const response = await axios
                    .post("http://49.50.167.42:8000/getLatLng", {
                        placeId: place.id,
                    })
                    .then((result) => {
                        console.log(result.data);
                        lon = result.data.lon;
                        lat = result.data.lat;
                        const div = place.parentNode.parentNode.parentNode;
                        const ul = place.parentNode;
                        const p = document.createElement("p");
                        const placesList = document.querySelector(".searchResult");

                        div.setAttribute(
                            "id",
                            `${result.data.location.lng},${result.data.location.lat}`
                        );
                        div.setAttribute("class", "postBox");
                        console.log(div);

                        console.log(place.innerText);
                        p.innerText = place.innerText + " (" + place.id + ")";

                        ul.parentNode.nextElementSibling.remove();
                        ul.parentNode.remove();
                        div.append(p);

                        // postCourse[num].append({
                        //     courseImagePath: "temp",
                        //     courseLon: result.data.lon,
                        //     courseLat: result.data.lat,
                        //     courseText: "course설명입니다",
                        // });
                        // return result.data;
                    });
            }

            function displayPlaces(places) {
                const placesList = document.querySelector(".searchResult");
                placesList.innerHTML = ""; // 기존 목록 초기화

                if (places.length === 0) {
                    placesList.innerHTML = "No places found.";
                    return;
                }
                const search = document.querySelector(".searchResult");
                const ul = document.createElement("ul");
                places.forEach((place) => {
                    const btn = document.createElement("button");
                    const li = document.createElement("li");
                    console.log(place);
                    btn.setAttribute("id", place.place_id);
                    btn.setAttribute("type", "button");
                    btn.setAttribute("onclick", "axiosPost(this)");
                    btn.setAttribute("value", "위치 선택");
                    btn.textContent = `${place.name}`;
                    console.log(btn);

                    li.appendChild(btn);
                    ul.appendChild(btn);
                });

                placesList.appendChild(ul);
            }

            async function getLonLat() {
                try {
                    // const placeIdInput = document.getElementById("placeIdInput");
                    // const placeId = placeIdInput.value;

                    const response = await axios.post("http://49.50.167.42:8000/getLatLng", {
                        placeId: "ChIJAQUM8DC5fDURFfgRagtj3pM",
                    });

                    const location = response.data.location;

                    // displayLocation(location);
                    console.log(location);
                } catch (error) {
                    console.error("Error fetching location:", error.message);
                    alert("Failed to fetch location. Please check the console for details.");
                }
            }

            function displayLocation(location) {
                const locationInfo = document.getElementById("locationInfo");
                locationInfo.innerHTML = ""; // 이전 정보 초기화

                const p = document.createElement("p");
                p.textContent = `Latitude: ${location.lat}, Longitude: ${location.lng}`;

                locationInfo.appendChild(p);
            }

            function appendPost() {
                console.log(form.title.value);
                let postBoxList = document.getElementsByClassName("postBox");
                let weatherRadio = document.querySelector('input[name="weather"]:checked').value;
                let postTitle = document.querySelector('input[name="title"]').value;
                let postContent = document.querySelector('textarea[name="postContent"]').value;
                let postCourse = [];
                for (let i = 0; i < postBoxList.length; i++) {
                    console.log(postBoxList[i]);
                    console.log(postContent);
                    let postLonLat = postBoxList[i].id.toString().split(",");
                    console.log(postLonLat);
                    postCourse[i] = {
                        courseImagePath: "temp",
                        courseLon: postLonLat[0],
                        courseLat: postLonLat[1],
                        courseText: postContent,
                    };
                }
                const data = {
                    postTitle: postTitle,
                    weather: weatherRadio,
                    region: "서울",
                    postCourse: postCourse,
                };
                axios({
                    method: "POST",
                    url: "/writePost",
                    data: data,
                })
                    .then((data) => {
                        if (data) {
                            console.log(data);
                            location.href = "/main";
                        } else {
                            alert("다시 시도해주세요");
                        }
                    })
                    // .then(function (data) {})
                    .catch((err) => console.log(err));
            }

            function addPost() {
                let regionNewBox = document.createElement("div");
                let addBTN = document.querySelector("#addBTN");
                let regionBox = addBTN.previousElementSibling;
                console.log(addBTN);
                console.log(regionBox);

                regionNewBox.innerHTML = `<textarea name="" id="" cols="30" rows="10" placeholder="내용을 입력해주세요" style="height: 300px" maxlength="500"></textarea><input type="file" name="" id="postEditFile" /><input type="text" id="searchText" placeholder="찾으시는 위치를 적어주세요"/><div class="searchResult"></div> <button type="button" onclick="getPlaces()" value="위치검색" id="searchBTN"> 위치 검색하기 </button>`;
                regionBox.append(regionNewBox);
            }
        </script>
    </body>
</html>
