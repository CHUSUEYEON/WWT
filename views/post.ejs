<!DOCTYPE html>
<html lang="ko">
    <%- include('include/head', { title: 'What Was Today' })%>
    <body>
        <%- include('include/header')%>

        <!-- 

{
isLogin: true,
postData:{
    postNumber: 1,
    postTitle: "임시제목",
    weather: null,
    region: null,
    reImage: "temp",
    createdAt: "2024-03-06T04:59:23.000Z",
    updatedAt: "2024-03-06T04:59:23.000Z",
    userID: 1
    },
commentResult:[
        {"courseNumber": 1, "courseImagePath": "temp", "courseLon": 12.12, "courseLat": 13.13, "courseText": "course설명입니다",…},
        {"courseNumber": 2, "courseImagePath": "temp", "courseLon": 12.12, "courseLat": 13.13, "courseText": "course설명입니다",…}
    ],
postCourseData:[
        {"courseNumber": 1, "courseImagePath": "temp", "courseLon": 12.12, "courseLat": 13.13, "courseText": "course설명입니다",…},
        {"courseNumber": 2, "courseImagePath": "temp", "courseLon": 12.12, "courseLat": 13.13, "courseText": "course설명입니다",…}
    ]
    }
         -->
        <div class="postContainer">
            <div id="postIcon"></div>
            <div class="userNickname"><%= data.userNickname %></div>
            <h2><%=postData.postTitle%></h2>
            <div
                id="mapid"
                style="
                    width: 100%;
                    height: 400px;
                    z-index: 0;
                    box-shadow: 5px 5px 5px rgb(217, 217, 217);
                    margin-bottom: 15px;
                "
            ></div>
            <% for(let i = 0; i < postCourseData.length; i++){ %>
            <div class="postContent">
                <ul>
                    <li id="postImg">
                        <img
                            src="/<%=postCourseData[i].courseImagePath%>"
                            alt="<% postData.postTitle %> Image"
                            style="width: 100%"
                        />
                    </li>
                    <li id="postWriting"><%=postCourseData[i].courseText%></li>
                    <li class="map" style="height: 200px; margin-bottom: 15px; z-index: 0"></li>
                </ul>
            </div>
            <% } %>
        </div>
        <div class="commentContainer">
            <ul class="comment">
                <li class="commentForm">
                    <form action="" id="commentForm" name="comment">
                        <h4>댓글쓰기(<span><%= commentResult.length %></span>)</h4>
                        <span class="psBox">
                            <input
                                type="text"
                                placeholder="댓글 내용을 입력해주세요."
                                class="int"
                                name="content"
                            />

                            <input type="submit" class="btn" value="등록" onclick="postComment()" />
                        </span>
                    </form>
                </li>
                <li id="commentList">
                    <% for(let i=commentResult.length-1; i>=0; i--){%>
                    <ul class="commentRow">
                        <% if(commentResult[i].isDeleted) {%>
                        <li style="text-align: center; height: 100px; line-height: 100px">
                            댓글이 삭제되었습니다.
                        </li>
                        <% } else {%>
                        <li class="commentID"><%= commentResult[i].userNickname %></li>
                        <li class="commentContent"><%= commentResult[i].commentText %></li>
                        <li class="commentDate">
                            <div class="postBTNs">
                                <button class="replyComment" type="button">
                                    댓글
                                    <img
                                        src="../static/image/comment.png"
                                        alt=""
                                        style="width: 11px"
                                    />
                                </button>
                                <button
                                    class="deleteCommentBTN"
                                    id="<%=commentResult[i].commentID%>"
                                    type="button"
                                    onclick="deleteComment(this.id)"
                                >
                                    댓글 삭제
                                </button>
                            </div>
                            <%= commentResult[i].createdAt.toLocaleString() %>
                        </li>
                        <%}%>
                    </ul>
                    <%}%>
                </li>
            </ul>
        </div>

        <%- include('include/footer') %>
        <script>
            const commentBtn = document.querySelector("#commentForm");
            const commentList = document.querySelector("#commentList");
            const total = document.querySelector("h4 > span");
            const list = [];
            const form = document.forms["comment"];
            // 위도(latitude)와 경도(longitude) 데이터
            let markers = [];
            function showMap() {
                console.log(`<%=postCourseData.length %>`);

                `<%for (let i = 0; i < postCourseData.length; i++) { %>`;
                console.log("=====");
                `<% let latitude = postCourseData[i].courseLat %>`;
                `<% let longitude = postCourseData[i].courseLon %>`;
                markers[`<%=i%>`] = {
                    latitude: `<%= latitude%>`,
                    longitude: `<%= longitude%>`,
                };
                `<%}%>`;

                let mymap = L.map("mapid").setView([markers[0].latitude, markers[0].longitude], 10);

                // OpenStreetMap 타일 레이어를 추가합니다.
                L.tileLayer("https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png", {
                    maxZoom: 21,
                }).addTo(mymap);

                markers.forEach(function (marker) {
                    L.marker([marker.latitude, marker.longitude]).addTo(mymap);
                });

                let polyline = L.polyline(
                    markers.map((marker) => [marker.latitude, marker.longitude]),
                    {
                        color: "red",
                    }
                ).addTo(mymap);
                // 마커를 추가하여 해당 위도와 경도에 표시합니다.
            }
            function showSmallMap() {
                markers.forEach(function (location, index) {
                    let mapLi = document.querySelectorAll(".map");
                    console.log(mapLi[1]);
                    mapLi[index].setAttribute("id", "map-" + index);

                    let map = L.map("map-" + index).setView(
                        [location.latitude, location.longitude],
                        16
                    );

                    L.tileLayer("https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png", {
                        maxZoom: 19,
                    }).addTo(map);

                    L.marker([location.latitude, location.longitude]).addTo(map);
                });
            }

            // function commentReply(id) {
            //     let replyBox = document.getElementById(id);

            //     console.log(replyBox.style.display);
            //     if (replyBox.style.display === "block") {
            //         replyBox.setAttribute("style", "display: none");
            //     } else {
            //         replyBox.setAttribute("style", "display: block");
            //     }
            // }

            showMap();
            showSmallMap();

            function postComment() {
                console.log(form.content.value);
                console.log(list.length + 1);
                console.log("<%= postData.postNumber%>");

                // const replyInput = document.querySelector(".replyInput");

                console.log(form.content.value);

                let data = {
                    postNumber: "<%= postData.postNumber%>",
                    // userID: getPost.useID,
                    userID: "<%=data.id%>",
                    commentText: form.content.value,
                    // isReply: replyInput.parentNode.parentNode.id
                };

                console.log(data);

                axios({
                    method: "POST",
                    url: "/postComment",
                    data: data,
                })
                    .then((data) => {
                        if (data) {
                            location.href = "/getPost/" + `<%= postData.postNumber %>`;
                        } else {
                            alert("다시 시도해주세요");
                        }
                    })
                    // .then(function (data) {})
                    .catch((err) => console.log(err));
            }

            // function postReplyComment() {
            //     console.log(form.content.value);
            //     console.log(list.length + 1);
            //     console.log("<%#= postData.postNumber%>");

            //     const replyInput = document.querySelector(".replyInput");

            //     // console.log(replyInput.parentNode.parentNode.id);

            //     let data = {
            //         postNumber: "<%#= postData.postNumber%>",
            //         // userID: getPost.useID,
            //         userID: "<%#=data.id%>",
            //         commentText: replyInput.value,
            //         isReply: replyInput.parentNode.parentNode.id,
            //     };

            //     console.log(data);

            //     axios({
            //         method: "POST",
            //         url: "/postComment",
            //         data: data,
            //     })
            //         .then((data) => {
            //             if (data) {
            //                 locations.href = "/getPost/" + `<%= postData.postNumber %>`;
            //             } else {
            //                 alert("다시 시도해주세요");
            //             }
            //         })
            //         // .then(function (data) {})
            //         .catch((err) => console.log(err));
            // }

            function deleteComment(id) {
                console.log(id);
                axios({
                    url: "/deleteComment",
                    method: "DELETE",
                    data: {
                        commentID: id,
                    },
                }).then((res) => {
                    console.log(res.data);
                    if (res.data.isSuccess) {
                        alert("댓글이 삭제되었습니다.");
                        location.href = "/getPost/" + `<%= postData.postNumber %>`;
                    } else {
                        alert("댓글은 본인만 삭제할 수 있습니다.");
                    }
                });
            }
        </script>
    </body>
</html>
