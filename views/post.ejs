<!DOCTYPE html>
<html lang="ko">
    <%- include('include/head', { title: 'What Was Today' })%>
    <body>
        <%- include('include/header')%>

        <!-- 

{
isLogin: true,
postData:{
    postNumber: 1,
    postTitle: "임시제목",
    weather: null,
    region: null,
    reImage: "temp",
    createdAt: "2024-03-06T04:59:23.000Z",
    updatedAt: "2024-03-06T04:59:23.000Z",
    userID: 1
    },
commentResult:[
        {"courseNumber": 1, "courseImagePath": "temp", "courseLon": 12.12, "courseLat": 13.13, "courseText": "course설명입니다",…},
        {"courseNumber": 2, "courseImagePath": "temp", "courseLon": 12.12, "courseLat": 13.13, "courseText": "course설명입니다",…}
    ],
postCourseData:[
        {"courseNumber": 1, "courseImagePath": "temp", "courseLon": 12.12, "courseLat": 13.13, "courseText": "course설명입니다",…},
        {"courseNumber": 2, "courseImagePath": "temp", "courseLon": 12.12, "courseLat": 13.13, "courseText": "course설명입니다",…}
    ]
    }
         -->
        <div class="postContainer">
            <div id="postIcon"></div>
            <h2><%=postData.postTitle%></h2>
            <div
                id="mapid"
                style="
                    width: 100%;
                    height: 400px;
                    z-index: 0;
                    box-shadow: 5px 5px 5px rgb(217, 217, 217);
                    margin-bottom: 15px;
                "
            ></div>
            <% for(let i = 0; i < postCourseData.length; i++){ %>
            <div class="postContent">
                <ul>
                    <li id="postImg">
                        <img
                            src="/static/uploads/<%=postData.reImage%>"
                            alt="<% postData.postTitle %> Image"
                            style="width: 100%"
                        />
                    </li>
                    <li id="postWriting"><%=postCourseData[0].courseText%></li>
                    <li class="map" style="height: 200px">
                        <%#=postCourseData[0].courseLon, postCourseData[0].couresLat%>위치
                    </li>
                </ul>
            </div>
            <% } %>
        </div>
        <div class="commentContainer">
            <ul class="comment">
                <li class="commentForm">
                    <form action="" id="commentForm" name="comment">
                        <h4>댓글쓰기(<span></span>)</h4>
                        <span class="psBox">
                            <input
                                type="text"
                                placeholder="댓글 내용을 입력해주세요."
                                class="int"
                                name="content"
                            />

                            <input type="submit" class="btn" value="등록" onclick="postComment()" />
                        </span>
                    </form>
                </li>
                <li><%#= commentResult[0].userNickname %></li>
            </ul>
            <% console.log(data) %> <% console.log('----->',postData) %>
        </div>
        <script>
            const commentBtn = document.querySelector("#commentForm");
            const commentList = document.querySelector("#commentList");
            const total = document.querySelector("h4 > span");
            const list = [];
            const form = document.forms["comment"];
            // 위도(latitude)와 경도(longitude) 데이터
            let locations = [];
            function showMap(lat, lon) {
                console.log(`<%=postCourseData.length %>`);

                `<%for (let i = 0; i < postCourseData.length; i++) { %>`;
                console.log("=====");
                `<% let latitude = postCourseData[i].courseLat %>`;
                `<% let longitude = postCourseData[i].courseLon %>`;
                locations[`<%=i%>`] = {
                    latitude: `<%= latitude%>`,
                    longitude: `<%= longitude%>`,
                };
                `<%}%>`;
                console.log(locations);
                console.log(locations);
                // Leaflet을 사용하여 지도를 생성합니다.
                let mymap = L.map("mapid").setView(
                    [locations[0].latitude, locations[0].longitude],
                    10
                );

                // OpenStreetMap 타일 레이어를 추가합니다.
                L.tileLayer("https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png", {
                    maxZoom: 10,
                }).addTo(mymap);

                locations.forEach(function (location) {
                    var marker = L.marker([location.latitude, location.longitude]).addTo(mymap);
                });
                // 마커를 추가하여 해당 위도와 경도에 표시합니다.
            }
            function showSmallMap() {
                locations.forEach(function (location, index) {
                    let mapLi = document.querySelectorAll(".map");
                    console.log(mapLi[1]);
                    mapLi[index].setAttribute("id", "map-" + index);

                    let map = L.map("map-" + index).setView(
                        [location.latitude, location.longitude],
                        16
                    );

                    L.tileLayer("https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png", {
                        maxZoom: 19,
                    }).addTo(map);

                    L.marker([location.latitude, location.longitude]).addTo(map);
                });
            }
            showMap();
            showSmallMap();
            function Comment(content) {
                let today = new Date();
                // this.userid = data.userNickname;
                this.userid = `<%= data.userNickname%>`;
                this.content = content;
                this.date = today.toLocaleString();
            }

            function createRow(userid, content, date) {
                const ul = document.createElement("ul");
                const li1 = document.createElement("li");
                const li2 = document.createElement("li");
                const li3 = document.createElement("li");

                ul.append(li1);
                ul.append(li2);
                ul.append(li3);

                ul.setAttribute("class", "commentRow");
                li1.setAttribute("class", "commentID");
                li2.setAttribute("class", "commentContent");
                li3.setAttribute("class", "commentDate");

                li1.innerHTML = userid;
                li2.innerHTML = content;
                li3.innerHTML = date;

                return ul;
            }
            function drawing() {
                commentList.innerHTML = "";
                for (let i = list.length - 1; i >= 0; i--) {
                    const row = createRow(list[i].userid, list[i].content, list[i].date);
                    commentList.appendChild(row);
                }
            }
            function totalRecord() {
                total.innerHTML = `${list.length}`;
            }
            function commentBtnHandler(e) {
                e.preventDefault();
                const input = e.target.content;
                if (input.value === "") {
                    alert("내용을 넣고 등록 버튼을 눌러주세요");
                    return;
                }
                const commentObj = new Comment(input.value);
                list.push(commentObj);
                totalRecord();

                drawing();
                e.target.reset();
            }

            // totalRecord();
            // commentBtn.addEventListener("submit", commentBtnHandler);
            // console.log(form.content.value);

            totalRecord();
            function postComment() {
                console.log(form.content.value);
                console.log(list.length + 1);
                const data = {
                    postNumber: "<%= postData.postNumber%>",
                    // userID: getPost.useID,
                    userID: "<%=data.id%>",
                    commentText: form.content.value,
                };
                axios({
                    method: "POST",
                    url: "/postComment",
                    data: data,
                })
                    .then((data) => {
                        if (data) {
                            console.log(data);
                            const commentObj = new Comment(data.commentText);
                            list.push(commentObj);
                            totalRecord();
                            drawing();
                        } else {
                            alert("다시 시도해주세요");
                        }
                    })
                    // .then(function (data) {})
                    .catch((err) => console.log(err));
            }
        </script>
    </body>
</html>
